<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARBYXAEUXGABLHyAATB8hAFAjIgBOIyMATiMkAE8kJQBTJSMAUCUmAFEmJwBSJygAUigpAFMp
        KgBTKisAVCorAFUsLQBdLScAViwtAFctLgBXLi8AWC8wAF0wLABgMSsAYjMtAFsyMwBbMzUAYzUvAFw0
        NQBNMkMAXDU2AF02NwBeNjcAXjc4AGA5OgBhOjsAYTs8AGI7PABlPTwAYz0+AGQ+PwBjPkEAbEA5AGVA
        QQBoQUAASz1bAGdCQwBnQ0QAaENEAGlERQBoREYAakVFAGpFRwBfRFAAakZHAGtGSABwR0MAYEVRADxC
        cgBwSkkAbUpLAG5KSwBhSFcAbktMAEpGbABvTE0AdU1IAHFNTAB5TkgAcE1PAHFOTwByT1AAeFBLAHNQ
        UQBVTGsAW01mAHRRUgBjT2AANkmGAHRSUwBzUlQAeVNPAHVTVABMTncAdlRVAHxVUABqU2AAdlVWAHdW
        VwB4V1gAeVhZAHpYWQB5WVoAellaAHhaXQB7W1wAe1tdAHtcXQCDXVcAhF5YAH1dXgB/Xl0AfV5fAH5e
        XwCDX1oAWll9AH9fYAB/YGEAf2BiAIRhXgCIYlsAgGFiAIJiYQCAYmMAXV2AAIFjZACCY2UAg2RmAGth
        egA0WagAhWZmAIVnaQCHaGkAh2lrAHRnegCJbG0AiW1uAItvcACMb3EAjHBxAI1xcgCDcX0AKWXKAI90
        dgBlbpkAlHVzAJB1dwCRdncAUG2uAF5vowCRd3gAknd4AJJ4eQAvaswAMWvLADFrzQCUensAUHC0ACRq
        2QCVe3wASnG7ADFt0QCVfH0Alnx9ACBr3wCdfngAl31/AJh+gACXf4AAIm7iAJmAgQCZgYIAmoGCAB5v
        6QAXbu8AOHPUAJaBhgAnceMAIHDpAJuChACgg38AHXDsAKCDgAAqcuMAIHHqAKGEgAAYcPIAJXLnADt1
        1gAkcugAIXLqAC503wAjcuoAnISFAC904QAgcu0ATnnHAJ2FhgAjc+wApIaBACFz7gAec/EAnoaHAB1z
        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
        ////////////////////////
</value>
  </data>
</root>